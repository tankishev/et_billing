# Generated by Django 4.1.7 on 2023-12-23 11:47

from django.db import migrations, models
import django.db.models.deletion


def copy_transaction_status(apps, schema_editor):
    # Get the models
    OldTransactionStatus = apps.get_model('reports', 'TransactionStatus')
    NewTransactionStatus = apps.get_model('stats', 'TransactionStatus')

    # Copy the data from the old model to the new model
    for old_status in OldTransactionStatus.objects.using(schema_editor.connection.alias).all():
        NewTransactionStatus.objects.create(
            status_type=old_status.status_type,
            description=old_status.description
        )


class Migration(migrations.Migration):

    dependencies = [
        ('services', '0002_alter_service_options'),
        ('vendors', '0012_alter_vendor_description'),
        ('stats', '0013_uqustatsperiodcountries'),
    ]

    operations = [
        migrations.CreateModel(
            name='TransactionStatus',
            fields=[
                ('status_type', models.IntegerField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'stats_transaction_statuses',
            },
        ),
        migrations.RunPython(copy_transaction_status, reverse_code=migrations.RunPython.noop),
        migrations.CreateModel(
            name='UsageTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('thread_id', models.CharField(max_length=12)),
                ('transaction_id', models.BigIntegerField()),
                ('charge_user', models.BooleanField(default=False)),
                ('bio_pin', models.BooleanField(default=False)),
                ('service', models.ForeignKey(db_column='service_id', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='usage_transactions', to='services.service')),
                ('transaction_status', models.ForeignKey(db_column='status_id', on_delete=django.db.models.deletion.RESTRICT, to='stats.transactionstatus')),
                ('vendor', models.ForeignKey(db_column='vendor_id', on_delete=django.db.models.deletion.RESTRICT, related_name='usage_transactions', to='vendors.vendor')),
            ],
            options={
                'db_table': 'stats_usage_transactions',
            },
        ),
    ]
